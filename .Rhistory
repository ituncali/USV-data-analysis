title="Male Pup Flat-z")
pca_biplot_fflat_strain
View(res.clust_fflat)
pca_biplot_fflat_strain <- bi_plot(flatfpup.pca, res.clust_fflat, res.clust_fflat$clust,
title="Male Pup Flat-z")
pca_biplot_fflat_strain
View(res.clust_fflat %>% filter(clust=="3"))
View(pca_data)
###try f pup flats... color in by strain
pca_data_fpupflats <- data_freqs %>% filter(recording=="Fpupiso" &
label=="flat")
pru <- data.frame(pca_data_fpupflats, clust=flatfpup.clust$data.clust$clust)
View(pru)
View(pru %>% filter(clust=="3"))
pru_3 <- pru %>% filter(clust=="3")
View(pru_3)
x <- c(1:50)
y1 <- as.vector(pru_3[1,1:50])
plot(x,y1)
y2 <- as.vector(pru_3[2,1:50])
plot(x,y2)
y3 <- as.vector(pru_3[3,1:50])
plot(x,y3)
y4 <- as.vector(pru_3[4,1:50])
y4 <- as.vector(pru_3[4,1:50])
plot(x,y4)
###try f pup flats... color in by strain
pca_data_fpupflats <- pca_data %>% filter(recording=="Fpupiso" &
label=="short")
pca_data_new <- pca_data_fpupflats %>%
select(duration, m.freq, bandwidth)
flatfpup.clust <- HCPC(pca_data_new, nb.clust=-1, consol=TRUE, iter.max=10, min=3,
max=NULL, metric="euclidean", method="ward", order=TRUE,
graph.scale="inertia", nb.par=5, graph=TRUE, proba=0.05,
cluster.CA="rows",kk=Inf,description=TRUE)
flatfpup.pca <- prcomp(pca_data_new, scale=T, center=T)
res.clust_fflat <- data.frame(pca_data_fpupflats, clust=flatfpup.clust$data.clust$clust)
pca_biplot_fflat_strain <- bi_plot(flatfpup.pca, res.clust_fflat, res.clust_fflat$strain,
title="Male Pup Flat-z")
pca_biplot_fflat_strain
###try f pup flats... color in by strain
pca_data_fpupflats <- pca_data %>% filter(recording=="Mpupiso" &
label=="short")
pca_data_new <- pca_data_fpupflats %>%
select(duration, m.freq, bandwidth)
flatfpup.clust <- HCPC(pca_data_new, nb.clust=-1, consol=TRUE, iter.max=10, min=3,
max=NULL, metric="euclidean", method="ward", order=TRUE,
graph.scale="inertia", nb.par=5, graph=TRUE, proba=0.05,
cluster.CA="rows",kk=Inf,description=TRUE)
flatfpup.pca <- prcomp(pca_data_new, scale=T, center=T)
res.clust_fflat <- data.frame(pca_data_fpupflats, clust=flatfpup.clust$data.clust$clust)
pca_biplot_fflat_strain <- bi_plot(flatfpup.pca, res.clust_fflat, res.clust_fflat$strain,
title="Male Pup Flat-z")
pca_biplot_fflat_strain
##USV counts during maternal behaviors
beh_times_data <- read.csv("data/Exp1_MBT_beh_times.csv",stringsAsFactors = F)
View(beh_times_data)
names(beh_times_data) <- c("rat.id","file.name","strain","behavior","start","end","beh.dur")
beh_times_data$behavior <- gsub("HKP","LKP",beh_times_data$behavior)
breaks <- c(rbind(beh_times_data$start,beh_times_data$end))
merged.data <- merge(start.rows, beh_times_data, by = c("file.name","rat.id","strain"))
View(merged.data)
##start time counts
categories.allowed.search <- paste0(allowed.categories, "(?!-)")
start_data <- cbind(data_counts,
no.counts = mapply(function(q) sum(str_count(q,categories.allowed.search)),data_counts$label))
#rows.to.rep <- start_data %>% filter(no.counts > 1)
#needed to add extra regex at beginning to account for multi-step-s
xtra.list <- mapply(function(q) str_extract_all(q, pattern = "[a-z]+(-[a-z]+)(-[a-z]+)|[a-z]+(-[a-z]+)|[a-z]+"),
start_data$label)
xtra.notlist <- unlist(xtra.list)
xtra.notlist.fix <- str_replace_all(xtra.notlist,
pattern = c("downward" = "downward ramp",
"upward" = "upward ramp",
"up$" = "step up",
"down$" = "step down"#,
#"inverted$" = "inverted-u",
#"^s$" = "multi-step-s"
))
#first remove the rows that do not contain calls
xtra.rows <- unlist(mapply(function(q) str_subset(q, categories.allowed.search), xtra.notlist.fix))
start.rows <- cbind.data.frame(label = xtra.rows,
rat.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$rat.id, x = start_data$no.counts)),
strain = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$strain, x = start_data$no.counts)),
start.time = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$start.time, x = start_data$no.counts)),
file.name = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$file.name, x = start_data$no.counts)),
unique.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$unique.id, x = start_data$no.counts)),
recording = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$recording, x = start_data$no.counts)))
breaks <- c(rbind(beh_times_data$start,beh_times_data$end))
merged.data <- merge(start.rows, beh_times_data, by = c("file.name","rat.id","strain"))
View(merged.data)
library(dplyr)
library(reshape2)
source("C:/Users/ituncali/Documents/Master's Thesis/USV-Data-Management/src/count_total.R")
library(stringr)
##counts
data_counts <- read.csv("data/Exp1_All_Labels_Starttimes.csv",stringsAsFactors = F)
allowed.categories <- c("flat", "flat-z", "flat-mz", "short", "short-su", "short-sd",
"short-ur", "short-dr", "short-c", "complex", "upward ramp",
"downward ramp", "step up", "step down", "multi-step", "multi-step-s",
"trill", "trill-c", "trill-f", "inverted-u", "unclear")
count_list <- by(data = data_counts, INDICES = data_counts$file.name, FUN = function(x) count_total(x, allowed.categories))
count_frame <- do.call(rbind, count_list)
count_frame$file.name <- row.names(count_frame)
row.names(count_frame) <- NULL
count_frame$file.name <- str_replace(count_frame$file.name, pattern = ".[0-9]+$", replacement =  "" )
count_frame <- count_frame %>% group_by(file.name) %>%
mutate(total.filecounts=sum(total.counts), rel.filecount=total.counts/total.filecounts)
#need to add missing data
wk95.f <- data.frame(categories.allowed = allowed.categories,
total.counts = c(rep(0,21)),
file.name = c(rep("T0000305",21)),
total.filecounts = c(rep(0,21)),
rel.filecount = c(rep(0,21)))
ma.missing.data <- data.frame(categories.allowed = c(rep(allowed.categories,10)),
total.counts = c(rep(0,210)),
file.name = c(rep("T0000094",21),rep("T0000139",21),rep("T0000122",21),
rep("T0000146",21),rep("T0000147",21),rep("T0000183",21),
rep("T0000188",21),rep("T0000193",21),rep("T0000227",21),
rep("T0000301",21)),
total.filecounts = c(rep(0,210)),
rel.filecount = c(rep(0,210)))
count_frame_added <- rbind.data.frame(count_frame, wk95.f, ma.missing.data)
##file.name.key
file.name.key.unmelted <- read.csv("data/Exp1_file.name_key.csv", stringsAsFactors = F)
file.name.key <- melt(data=file.name.key.unmelted,id = c("strain","rat.id"),
variable.name="recording",value.name = "file.name")
count_frame_2 <- left_join(count_frame_added, file.name.key)
##start time counts
categories.allowed.search <- paste0(allowed.categories, "(?!-)")
start_data <- cbind(data_counts,
no.counts = mapply(function(q) sum(str_count(q,categories.allowed.search)),data_counts$label))
#rows.to.rep <- start_data %>% filter(no.counts > 1)
#needed to add extra regex at beginning to account for multi-step-s
xtra.list <- mapply(function(q) str_extract_all(q, pattern = "[a-z]+(-[a-z]+)(-[a-z]+)|[a-z]+(-[a-z]+)|[a-z]+"),
start_data$label)
xtra.notlist <- unlist(xtra.list)
xtra.notlist.fix <- str_replace_all(xtra.notlist,
pattern = c("downward" = "downward ramp",
"upward" = "upward ramp",
"up$" = "step up",
"down$" = "step down"#,
#"inverted$" = "inverted-u",
#"^s$" = "multi-step-s"
))
#first remove the rows that do not contain calls
xtra.rows <- unlist(mapply(function(q) str_subset(q, categories.allowed.search), xtra.notlist.fix))
start.rows <- cbind.data.frame(label = xtra.rows,
rat.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$rat.id, x = start_data$no.counts)),
strain = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$strain, x = start_data$no.counts)),
start.time = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$start.time, x = start_data$no.counts)),
file.name = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$file.name, x = start_data$no.counts)),
unique.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$unique.id, x = start_data$no.counts)),
recording = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$recording, x = start_data$no.counts)))
##counts
library(dplyr)
library(reshape2)
source("C:/Users/ituncali/Documents/Master's Thesis/USV-Data-Management/src/count_total.R")
library(stringr)
data_counts <- read.csv("data/Exp2_All_Labels_Starttimes.csv",stringsAsFactors = F)
allowed.categories <- c("flat", "flat-z", "flat-mz", "short", "short-su", "short-sd",
"short-ur", "short-dr", "short-c", "complex", "upward ramp",
"downward ramp", "step up", "step down", "multi-step", "multi-step-s",
"trill", "trill-c", "trill-f", "inverted-u", "unclear")
count_list <- by(data = data_counts, INDICES = data_counts$file.name, FUN = function(x) count_total(x, allowed.categories))
count_frame <- do.call(rbind, count_list)
row.names(count_frame) <- NULL
count_frame$file.name <- row.names(count_frame)
count_frame$file.name <- str_replace(count_frame$file.name, pattern = ".[0-9]+$", replacement =  "" )
count_frame <- count_frame %>% group_by(file.name) %>%
mutate(total.filecounts=sum(total.counts), rel.filecount=total.counts/total.filecounts)
file.name.key <- read.csv("data/Exp2_file_name_key.csv", stringsAsFactors = F)
count_frame_2 <- left_join(count_frame, file.name.key)
##start time counts
categories.allowed.search <- paste0(allowed.categories, "(?!-)")
start_data <- cbind(data_counts,
no.counts = mapply(function(q) sum(str_count(q,categories.allowed.search)),data_counts$label))
#rows.to.rep <- start_data %>% filter(no.counts > 1)
#needed to add extra regex at beginning to account for multi-step-s
xtra.list <- mapply(function(q) str_extract_all(q, pattern = "[a-z]+(-[a-z]+)(-[a-z]+)|[a-z]+(-[a-z]+)|[a-z]+"),
start_data$label)
xtra.notlist <- unlist(xtra.list)
xtra.notlist.fix <- str_replace_all(xtra.notlist,
pattern = c("downward" = "downward ramp",
"upward" = "upward ramp",
"up$" = "step up",
"down$" = "step down"#,
#"inverted$" = "inverted-u",
#"^s$" = "multi-step-s"
))
#first remove the rows that do not contain calls
xtra.rows <- unlist(mapply(function(q) str_subset(q, categories.allowed.search), xtra.notlist.fix))
start.rows <- cbind.data.frame(label = xtra.rows,
rat.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$rat.id, x = start_data$no.counts)),
strain = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$strain, x = start_data$no.counts)),
start.time = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$start.time, x = start_data$no.counts)),
file.name = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$file.name, x = start_data$no.counts)),
unique.id = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$unique.id, x = start_data$no.counts)),
recording = unlist(mapply(function(q,x) c(rep(q,x)),
q = start_data$recording, x = start_data$no.counts)))
View(start.rows)
##USV counts during maternal behaviors
beh_times_data <- read.csv("data/Exp1_MBT_beh_times.csv",stringsAsFactors = F)
View(beh_times_data)
##USV counts during maternal behaviors
beh_times_data <- read.csv("data/Exp2_MBT_beh_times_2.csv",stringsAsFactors = F)
View(beh_times_data)
##USV counts during maternal behaviors
beh_times_data <- read.csv("data/Exp2_MBT_beh_times_2.csv",stringsAsFactors = F)
View(beh_times_data)
wkveh_startrows <- start.rows %>% filter(strain == "WK" & recording=="VEH")
View(wkveh_startrows)
View(beh_times_data)
merged.data <- merge(start.rows, beh_times_data, by = c("rat.id"))
merged.data <- merge(start.rows, beh_times_data, by = "rat.id")
merged.data <- merge(start.rows, beh_times_data, by = rat.id)
merged.data <- merge(wkveh_startrows, beh_times_data, by = c("rat.id"))
beh_times_data <- read.csv("data/Exp2_MBT_beh_times_2.csv",stringsAsFactors = F)
merged.data <- merge(wkveh_startrows, beh_times_data, by = c("rat.id"))
View(merged.data)
beh.total.usv.counts <- merged.data %>%
filter(start.time > start & start.time < end) %>%
group_by(behavior, rat.id, label) %>%
summarise(usv.count = length(label))
View(beh.total.usv.counts)
ggplot(beh.total.usv.counts, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
ggplot(beh.total.usv.counts, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs")
library(ggplot2)
ggplot(beh.total.usv.counts, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs")
ggplot(beh.total.usv.counts, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
summarise(retrieval = sum(ret.1, ret.2, ret.3, ret.4, ret.5, ret.6, ret.7, ret.8))
rets <- c("ret.1","ret.2","ret.3","ret.4","ret.5","ret.6","ret.7","ret.8")
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
summarise(count = ifelse(behavior %in% rets, sum(behavior), behavior))
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(behavior))
rets <- c(ret.1,ret.2,ret.3,ret.4,ret.5,ret.6,ret.7,ret.8)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(behavior))
rets <- c(ret.1,ret.2,ret.3,ret.4,ret.5,ret.6,ret.7,ret.8)
class(beh.total.usv.counts$behavior)
class(rets)
as.vector(rets)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% as.vector(rets)) %>%
summarise(usv.count = sum(behavior))
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior %in% as.vector(rets)) %>%
summarise(usv.count = sum(behavior))
rets <- c("ret.1","ret.2","ret.3","ret.4","ret.5","ret.6","ret.7","ret.8")
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(behavior))
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior == "*ret*") %>%
summarise(usv.count = sum(behavior))
View(beh.usv.counts.plot.data)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior == "*ret*") #%>%
View(beh.usv.counts.plot.data)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior == "ret") #%>%
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior == *ret*) #%>%
rets <- c("ret.1"|"ret.2"|"ret.3"|"ret.4"|"ret.5"|"ret.6"|"ret.7"|"ret.8")
mbt_counts_all <- count_frame_2 %>% filter(recording == "MBT")
mbt_counts_all$strain <- as.factor(mbt_counts_all$strain)
mbt.per.1 <- mbt_counts_all %>%
group_by(strain, categories.allowed) %>%
summarise(usv.count = sum(total.counts)) %>%
group_by(strain) %>% mutate(percent=usv.count/sum(usv.count)*100) %>%
filter(percent>2)
label.to.keep <- as.vector(unique(mbt.per.1$categories.allowed))
mbt_counts <- mbt_counts_all %>% filter(categories.allowed %in% label.to.keep)
class(label.to.keep)
label.to.keep
rets <- c("ret.1","ret.2","ret.3","ret.4","ret.5","ret.6","ret.7","ret.8")
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
#group_by(rat.id, label) %>%
filter(behavior %in% rets) #%>%
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(behavior))
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(usv.count))
iew(beh.usv.counts.plot.data)
View(beh.usv.counts.plot.data)
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
summarise(count = ifelse(behavior %in% rets, sum(usv.count), usv.count))
beh.usv.counts.plot.data <- beh.total.usv.counts %>%
group_by(rat.id, label, behavior) %>%
summarise(count = ifelse(behavior %in% rets, sum(usv.count), usv.count))
View(beh.usv.counts.plot.data)
retrieval.total.counts <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(usv.count))
View(retrieval.total.counts)
retrieval.total.counts <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(usv.count)) %>%
mutate(behavior = rep("retrieval",length(retrieval.total.counts$rat.id)))
View(retrieval.total.counts)
retrieval.total.counts <- beh.total.usv.counts %>%
group_by(rat.id, label) %>%
filter(behavior %in% rets) %>%
summarise(usv.count = sum(usv.count)) %>%
ungroup() %>%
mutate(behavior = rep("retrieval",length(retrieval.total.counts$rat.id)))
View(beh.total.usv.counts %>%
filter(!(behavior %in% rets)))
beh.usv.counts.plot.data <- left_join(beh.total.usv.counts, retrieval.total.counts) %>%
filter(!(behavior %in% rets)) %>%
ggplot(beh.total.usv.counts, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
View(beh.total.usv.counts)
beh.usv.counts.plot.data <- left_join(beh.total.usv.counts, retrieval.total.counts) %>%
filter(!(behavior %in% rets))
View(beh.usv.counts.plot.data)
View(left_join(beh.total.usv.counts, retrieval.total.counts))
beh.usv.counts.plot.data <- rbind.data.frame(beh.total.usv.counts, retrieval.total.counts) %>%
filter(!(behavior %in% rets))
View(retrieval.total.counts)
View(rbind.data.frame(beh.total.usv.counts, retrieval.total.counts))
beh.usv.counts.plot.data <- rbind.data.frame(beh.total.usv.counts, retrieval.total.counts) %>%
filter(!(behavior %in% rets))
beh.usv.counts.plot.data <- rbind.data.frame(beh.total.usv.counts, retrieval.total.counts) %>%
ungroup() %>%
filter(!(behavior %in% rets))
View(beh.usv.counts.plot.data)
ggplot(beh.usv.counts.plot.data, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity",position = position_dodge(0.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
?geom_bar
ggplot(beh.usv.counts.plot.data, aes(x = behavior, y = usv.count, fill = label)) +
geom_bar(stat = "identity") +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = sd(usv.count)/sqrt(length(usv.count))) %>%
ggplot(beh.usv.counts.plot.data, aes(x = behavior, y = m.count)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
View(beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = sd(usv.count)/sqrt(length(usv.count))))
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)) %>%
ggplot(beh.usv.counts.plot.data, aes(x = behavior, y = m.count)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
View(beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)))
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)) %>%
ggplot(aes(x = behavior, y = m.count)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~rat.id)
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)) %>%
ggplot(aes(x = behavior, y = m.count)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~label)
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)) %>%
ggplot(aes(x = behavior, y = m.count, fill=label)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~behavior)
beh.usv.counts.plot.data %>%
group_by(behavior, label) %>%
summarise(m.count = mean(usv.count),
sd.count = ifelse(length(usv.count)>1,
sd(usv.count)/sqrt(length(usv.count)), 0)) %>%
ggplot(aes(x = label, y = m.count, fill=label)) +
geom_bar(stat = "identity", position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sd.count, ymax=m.count+sd.count),
position=position_dodge(.8)) +
#scale_colour_grey(start = 0, end = .6, labels = c("SD","WKY")) +
theme_classic() +
#theme(legend.position = "none") +
xlab("Behavior") +
ylab("# USVs") +
facet_wrap(~behavior)
