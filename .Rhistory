axis.text.x=element_blank(), axis.text.y=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
axis.line = element_blank())
base.plot.mbt <- ggplot(plot3.data.mbt, aes(x = duration * 1000, y = m.freq/1000)) +
geom_point(size = 2, aes(colour = strain), alpha = 0.3) +
xlab("Duration (ms)") +
ylab("Frequeny (kHz)") +
theme_classic() +
scale_colour_grey() +
theme(legend.position = "none", panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mbt.freq.hist <- data_freqs %>% filter(recording == "MBT")
freq.hist <- ggplot(mbt.freq.hist, aes(x = m.freq/1000, fill = strain)) +
geom_histogram(aes(y = c(..count..[..group..==1]/sum(..count..[..group..==1]),
..count..[..group..==2]/sum(..count..[..group..==2]))*100), position = "identity", colour = "black", alpha=0.5) +
ylab("(%)")+
scale_fill_grey() +
theme_classic() +
theme(legend.position = "none", axis.title.y = element_blank(),
axis.text.y = element_blank()) +
coord_flip()
mbt.dur.hist <- data_durs %>% filter(recording == "MBT" & duration < 0.4)
dur.hist <- ggplot(mbt.dur.hist, aes(x = duration * 1000, fill = strain)) +
geom_histogram(aes(y = c(..count..[..group..==1]/sum(..count..[..group..==1]),
..count..[..group..==2]/sum(..count..[..group..==2]))*100),
position = "identity", colour = "black", alpha=0.5) +
ylab("(%)")+
scale_fill_grey() +
theme_classic()+
theme(legend.position = "none", axis.title.x = element_blank(),
axis.text.x = element_blank())
plot3.data.mbt <- data_freqs %>% filter((recording == "MBT") &
(label == "flat"|label=="flat-mz"|
label == "flat-z"|label=="trill"|
label == "short"))
label_colours <- read.csv("data/usv_label_colours.csv", stringsAsFactors = F)
scatter.colour.key <- label_colours %>% filter(label == "flat"|label=="flat-mz"|
label == "flat-z"|label=="trill"|
label == "short")
inset.plot.mbt <- ggplotGrob(ggplot(plot3.data.mbt, aes(x = duration * 1000, y = m.freq/1000)) +
geom_point(size = 2, aes(colour = label), alpha = 0.5) +
scale_colour_manual(values=scatter.colour.key$colour) +
xlab("Duration (ms)") +
ylab("Frequeny (kHz)") +
theme_classic() +
theme(legend.background = element_rect(colour = "transparent", fill = "transparent"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = c(.7,.85), legend.title = element_blank(),
legend.direction = "horizontal",legend.text = element_text(size = 6),
plot.background = element_rect(colour = "transparent", fill = "transparent"),
axis.title = element_text(size = 6),
axis.text = element_text(size = 5)))
try.inset <- base.plot.mbt + annotation_custom(grob = inset.plot.mbt, xmin = 165, xmax = 610, ymin = 52, ymax = 95)
base.plot.mbt <- ggplot(plot3.data.mbt, aes(x = duration * 1000, y = m.freq/1000)) +
geom_point(size = 2, aes(colour = strain), alpha = 0.3) +
xlab("Duration (ms)") +
ylab("Frequeny (kHz)") +
theme_classic() +
scale_colour_grey() +
theme(legend.position = "none", panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
try.inset <- base.plot.mbt + annotation_custom(grob = inset.plot.mbt, xmin = 165, xmax = 610, ymin = 52, ymax = 95)
plot3 <- grid.arrange(dur.hist, empty, try.inset, freq.hist, ncol=2, nrow=2, widths=c(4, 1), heights=c(1, 4))
#usvs figure
plot_grid(plot1, plot2, plot3, labels = "AUTO", ncol = 2, align = 'w')
##maternal behavior data and analysis
mbt_behavior_unmelted <- read.csv("data/Exp1_MB_Scores.csv",stringsAsFactors = F)
library(reshape2)
mbt_behavior <- melt(data=mbt_behavior_unmelted,id = c("strain","rat.id", "file.name"),
variable.name="behavior",value.name = "score")
#behavioral counts
mbt.beh.counts.data <- mbt_behavior %>% filter(behavior == "retrieval" |
behavior == "mouthing" |
behavior == "corporal" |
behavior == "anogenital" |
behavior == "nest.building")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=14),
legend.title = element_blank()) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal Licking",
anogenital = "Anogenital Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size-14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal Licking",
anogenital = "Anogenital Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal Licking",
anogenital = "Anogenital Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal
Licking",
anogenital = "Anogenital
Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal
Licking",
anogenital = "Anogenital
Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal
Licking",
anogenital = "Anogenital
Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
ggplot(mbt.beh.counts.data, aes(x = behavior, y = score, colour = strain)) +
geom_boxplot(fill = "white", position=position_dodge(0.8)) +
geom_point(size = 2, aes(y = score, group = strain), position = position_jitterdodge(0.2)) +
scale_colour_grey(start=0, end=.6, labels = c("SD","WKY")) +
theme_classic() +
theme(legend.position = c(.2,.7), legend.text = element_text(size=17),
legend.title = element_blank(), axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
scale_x_discrete(labels = c(retrieval = "Retrieval",
mouthing = "Mouthing",
corporal = "Corporal
Licking",
anogenital = "Anogenital
Licking",
nest.building = "Nest Build")) +
xlab("Behavior") +
ylab("# Behaviors / 30min")
##summary stats of pup parameters
table.durs <- data_durs %>% filter((recording=="MA"|recording=="Mpupiso"|
recording=="Fpupiso") & (label=="flat"|
label=="flat-z"|
label=="short")) %>%
group_by(strain, label, rat.id) %>%
summarise(Min=round(min(duration)*1000,3), Mean=round(mean(duration)*1000,3),
SEM = round(sd(duration)/sqrt(length(duration))*1000,3),
fiveninetyfive=paste0(round(quantile(duration,0.05,type=3)*1000,3),", ",
round(quantile(duration,0.95,type=3)*1000,3)),
Max=round(max(duration)*1000,3))
table.freqs <- data_freqs %>% filter((recording=="MA"|recording=="Mpupiso"|
recording=="Fpupiso") & (label=="flat"|
label=="flat-z"|
label=="short")) %>%
group_by(strain, label, rat.id) %>%
summarise(Min=round(min(m.freq)/1000,3),Mean=round(mean(m.freq)/1000,3),
SEM = round(sd(m.freq)/sqrt(length(m.freq))/1000,3),
fiveninetyfive=paste0(round(quantile(m.freq,0.05,type=3)/1000,3),", ",
round(quantile(m.freq,0.95,type=3)/1000,3)),
Max=round(max(m.freq)/1000,3))
##distinguish between mom and pup
param.cutoffs <- data.frame(strain = table.freqs$strain,
label = table.freqs$label,
rat.id = table.freqs$rat.id,
freq.min = table.freqs$Min*1000,
freq.max = table.freqs$Max*1000,
dur.min = table.durs$Min/1000,
dur.max = table.durs$Max/1000)
mom_calls_1 <- data_freqs %>% filter(recording=="MBT") %>%
left_join(param.cutoffs) %>%
filter(m.freq < freq.min | m.freq > freq.max | duration < dur.min |
duration > dur.max) %>%
select(-freq.min, -freq.max, -dur.min, -dur.max)
mom_calls_2 <- data_freqs %>% filter(recording=="MBT" & (label=="trill"|
label=="trill-c"))
mom_freqs_joined <- rbind.data.frame(mom_calls_1, mom_calls_2)
#frequency data of maternal USVs
mom_freqs <- mom_freqs_joined %>% group_by(strain, rat.id, label) %>%
summarise(mean.freq = mean(m.freq), sem.freq = sd(m.freq)/sqrt(length(m.freq)),
count = length(label))
mom.freqs.lme <- lme(mean.freq ~ strain * label,
random = ~1|rat.id/label,
data = mom_freqs)
anova.lme(mom.freqs.lme)
#duration data of maternal usvs
mom_durs_1 <- data_durs %>% filter(recording=="MBT") %>%
anti_join(mom_freqs_joined, by=c("start.time"))
mom_durs_2 <- mom_durs_1 %>%
left_join(param.cutoffs) %>%
filter(duration < dur.min |duration > dur.max) %>%
select(-freq.min, -freq.max, -dur.min, -dur.max, -unique.id)
mom_freqs_joined_fix <- mom_freqs_joined %>%
select(file.name, label, strain, rat.id, recording, duration, start.time)
mom_durs <- rbind.data.frame(mom_durs_2, mom_freqs_joined_fix)
mom_durs_data <- mom_durs %>% group_by(strain, rat.id, label) %>%
summarise(mean.dur = mean(duration), count = length(duration))
mom.durs.lme <- lme(mean.dur ~ strain * label,
random = ~1|rat.id/label,
data=mom_durs_data)
#count data of maternal USVs
mom_calls_1_adjust <- mom_durs %>% select(-duration)
mom_calls_3 <- start.rows %>% filter(recording=="MBT") %>%
anti_join(mom_durs, by = c("start.time")) %>%
filter(label=="trill"|label=="trill-c") %>%
select(-unique.id)
mom_counts_1 <- rbind.data.frame(mom_calls_1_adjust, mom_calls_3)
mom_counts_2 <- mom_counts_1 %>% group_by(strain, label, rat.id) %>%
summarise(usv.count= length(label))
grid <- expand.grid(rat.id = unique(mom_counts_1$rat.id),
label = unique(mom_counts_1$label))
mom_counts_3 <- left_join(grid, mom_counts_2)
mom_counts <- mom_counts_3 %>% mutate(strain = ifelse(str_detect(rat.id,"SD")==T,
"SD","WK"),
usv.count = ifelse(is.na(usv.count),0,usv.count))
mom.counts.lme <- lme(usv.count ~ strain * label,
random = ~1|rat.id/label,
data = mom_counts)
###mom usvs
ggplot(mom_counts_1, aes(x = start.time, fill = label)) +
geom_histogram(colour="black", binwidth=60, position="identity") +
scale_fill_manual(values=c("#000000","#000000","#000000","#FF0000","#FF0000")) +
theme_classic() +
facet_wrap(~rat.id)+
theme(legend.justification = c(0,0),
legend.position = c(0.85, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
##mom counts
bar.moms <- mom_counts %>% group_by(strain, label) %>%
summarise(m.count = mean(usv.count),sem=sd(usv.count)/sqrt(length(usv.count)))
ggplot(bar.moms, aes(x = label, y=m.count, fill = strain)) +
geom_bar(colour="black", stat="identity",position=position_dodge(.8)) +
geom_errorbar(aes(ymin=m.count-sem,ymax=m.count+sem),
position=position_dodge(.8),
size=.1, width=.5) +
scale_fill_grey() +
theme_classic() +
theme(legend.justification = c(0,0),
legend.position = c(0.85, .45),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
ggplot(bar.moms, aes(x = label, y=m.count, fill = strain)) +
geom_bar(colour="black", stat="identity",position=position_dodge(.6),
width=.5) +
geom_errorbar(aes(ymin=m.count-sem,ymax=m.count+sem),
position=position_dodge(.6),
size=.1, width=.5) +
scale_fill_grey() +
theme_classic() +
theme(legend.justification = c(0,0),
legend.position = c(0.85, .45),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
ggplot(bar.moms, aes(x = label, y=m.count, fill = strain)) +
geom_bar(colour="black", stat="identity",position=position_dodge(.6),
width=.5) +
geom_errorbar(aes(ymin=m.count-sem,ymax=m.count+sem),
position=position_dodge(.6),
size=.1, width=.2) +
scale_fill_grey() +
theme_classic() +
theme(legend.justification = c(0,0),
legend.position = c(0.85, .45),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
ggplot(bar.moms, aes(x = label, y=m.count, fill = strain)) +
geom_bar(colour="black", stat="identity",position=position_dodge(.6),
width=.5) +
geom_errorbar(aes(ymin=m.count-sem,ymax=m.count+sem),
position=position_dodge(.6),
size=.1, width=.2) +
scale_fill_grey(labels=c("SD","WKY")) +
theme_classic() +
theme(legend.justification = c(0,0),
legend.position = c(0.85, .45),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
ggplot(bar.moms, aes(x = label, y=m.count, fill = strain)) +
geom_bar(colour="black", stat="identity",position=position_dodge(.6),
width=.5) +
geom_errorbar(aes(ymin=m.count-sem,ymax=m.count+sem),
position=position_dodge(.6),
size=.1, width=.2) +
scale_fill_grey(labels=c("SD","WKY")) +
theme_classic() +
theme(legend.justification = c(0,0),
legend.position = c(0.85, .45),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
axis.text=element_text(size=17),
axis.title=element_text(size=14)) +
xlab("USV Category") +
ylab("#USVs / 30min (n)")
###mom usvs
ggplot(mom_counts_1, aes(x = start.time, fill = label)) +
geom_histogram(colour="black", binwidth=60, position="identity") +
scale_fill_manual(values=c("#000000","#000000","#000000","#FF0000","#FF0000")) +
theme_classic() +
facet_wrap(~rat.id)+
theme(legend.justification = c(0,0),
legend.position = c(0.85, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent")) +
xlab("Start Time (s)") +
ylab("USVs (n)")
###mom usvs
ggplot(mom_counts_1, aes(x = start.time, fill = label)) +
geom_histogram(colour="black", binwidth=60, position="identity") +
scale_fill_manual(values=c("#000000","#000000","#000000","#FF0000","#FF0000")) +
theme_classic() +
facet_wrap(~rat.id)+
theme(legend.justification = c(0,0),
legend.position = c(0.85, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
axis.text=element_text(size=17),
axis.title=element_text(size=17),
legend.text=element_text(size=17)) +
xlab("Start Time (s)") +
ylab("#USVs / 30min (n)")
###mom usvs
ggplot(mom_counts_1, aes(x = start.time/60, fill = label)) +
geom_histogram(colour="black", binwidth=1, position="identity") +
scale_fill_manual(values=c("#000000","#000000","#000000","#FF0000","#FF0000")) +
theme_classic() +
facet_wrap(~rat.id)+
theme(legend.justification = c(0,0),
legend.position = c(0.85, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
axis.text=element_text(size=17),
axis.title=element_text(size=17),
legend.text=element_text(size=17)) +
xlab("Start Time (s)") +
ylab("#USVs / 30min (n)")
###mom usvs
ggplot(mom_counts_1, aes(x = start.time/60, fill = label)) +
geom_histogram(colour="black", binwidth=1, position="identity") +
scale_fill_manual(values=c("#000000","#000000","#000000","#FF0000","#FF0000")) +
theme_classic() +
facet_wrap(~rat.id)+
theme(legend.justification = c(0,0),
legend.position = c(0.85, 0),
legend.title = element_blank(),
legend.background = element_rect(fill = "transparent"),
axis.text=element_text(size=17),
axis.title=element_text(size=17),
legend.text=element_text(size=17)) +
xlab("Start Time (min)") +
ylab("#USVs / 30min (n)")
View(mom_counts)
trill.group.corr <- mom_counts %>% filter(label=="trill"|label=="trill-c")
trill.group.corr <- mom_counts %>% filter(label=="trill"|label=="trill-c") %>% left_join(mbt_behavior_unmelted$lat.group)
all.trills <- mom_counts %>% filter(label=="trill"|label=="trill-c") %>% group_by(rat.id, strain) %>% summarise(trill.count = sum(usv.count))
trill.group.corr <- left_join(all.trills, mbt_behavior_unmelted)
View(trill.group.corr)
cor.test(trill.group.corr$trill.count, trill.group.corr$lat.group)
cor.test(trill.group.corr$trill.count, trill.group.corr$retrieval)
cor.test(trill.group.corr$trill.count, trill.group.corr$corporal)
cor.test(trill.group.corr$trill.count, trill.group.corr$anogenital)
cor.test(trill.group.corr$trill.count, trill.group.corr$nest.building)
cor.test(trill.group.corr$trill.count, trill.group.corr$lat.retrieve)
cor.test(trill.group.corr$trill.count, trill.group.corr$lat.hover)
cor.test(trill.group.corr$trill.count, trill.group.corr$lat.nurse)
cor.test(trill.group.corr$trill.count, trill.group.corr$dur.hover)
cor.test(trill.group.corr$trill.count, trill.group.corr$dur.nurse)
cor.test(trill.group.corr$trill.count, trill.group.corr$crossing)
cor.test(trill.group.corr$trill.count, trill.group.corr$rearing)
cor.test(trill.group.corr$trill.count, trill.group.corr$self.groom)
trill.group.corr <- left_join(all.trills, mbt_behavior_unmelted) %>%
mutate(dur.retrieve = lat.group - lat.retrieve)
cor.test(trill.group.corr$trill.count, trill.group.corr$dur.retrieve)
data_counts <- read.csv("data/Exp2_All_Labels_Starttimes.csv",stringsAsFactors = F)
allowed.categories <- c("flat", "flat-z", "flat-mz", "short", "short-su", "short-sd",
"short-ur", "short-dr", "short-c", "complex", "upward ramp",
"downward ramp", "step up", "step down", "multi-step", "multi-step-s",
"trill", "trill-c", "trill-f", "inverted-u", "unclear")
count_list <- by(data = data_counts, INDICES = data_counts$file.name, FUN = function(x) count_total(x, allowed.categories))
count_frame <- do.call(rbind, count_list)
count_frame$file.name <- row.names(count_frame)
row.names(count_frame) <- NULL
count_frame$file.name <- str_replace(count_frame$file.name, pattern = ".[0-9]+$", replacement =  "" )
##counts
library(dplyr)
library(reshape2)
source("C:/Users/ituncali/Documents/Master's Thesis/USV-Data-Management/src/count_total.R")
library(stringr)
data_counts <- read.csv("data/Exp2_All_Labels_Starttimes.csv",stringsAsFactors = F)
allowed.categories <- c("flat", "flat-z", "flat-mz", "short", "short-su", "short-sd",
"short-ur", "short-dr", "short-c", "complex", "upward ramp",
"downward ramp", "step up", "step down", "multi-step", "multi-step-s",
"trill", "trill-c", "trill-f", "inverted-u", "unclear")
count_list <- by(data = data_counts, INDICES = data_counts$file.name, FUN = function(x) count_total(x, allowed.categories))
count_frame <- do.call(rbind, count_list)
count_frame$file.name <- row.names(count_frame)
row.names(count_frame) <- NULL
count_frame$file.name <- str_replace(count_frame$file.name, pattern = ".[0-9]+$", replacement =  "" )
count_frame <- count_frame %>% group_by(file.name) %>%
mutate(total.filecounts=sum(total.counts), rel.filecount=total.counts/total.filecounts)
file.name.key <- read.csv("data/Exp2_file_name_key.csv", stringsAsFactors = F)
count_frame_2 <- left_join(count_frame, file.name.key)
count_frame_3 <- count_frame_2 %>% filter(!(file.name=="T0000399"|
file.name=="T0000410"|
file.name=="T0000291"))
count_frame_3 <- count_frame_2
bp.usv.data <- count_frame_3 %>% filter(categories.allowed=="flat"|
categories.allowed=="short"|
categories.allowed=="trill"|
categories.allowed=="trill-c") %>%
group_by(strain, recording, categories.allowed) %>%
summarise(m.count = mean(total.counts), sem = sd(total.counts)/sqrt(length(total.counts))) %>%
mutate(group = ifelse(strain=="SD" & recording=="VEH", "1",
ifelse(strain=="SD" & recording=="MSX3", "2",
ifelse(strain=="WK" & recording=="VEH","3","4"))))
ggplot(bp.usv.data, aes(x = categories.allowed, y = m.count, fill = group)) +
geom_bar(stat="identity", position=position_dodge(.9), colour="black",
width=.7) +
geom_errorbar(aes(ymin = m.count-sem, ymax=m.count+sem),
position = position_dodge(.9), size=.5, width=.5) +
scale_fill_grey(labels=c("SD VEH","SD MSX-3","WKY VEH","WKY MSX-3")) +
theme_classic() +
theme(legend.justification = c(0,0), legend.position = c(.6,.6),
axis.text.x = element_text(size=14), legend.title=element_blank())+
xlab("USV Category")+
ylab("# USVs / 30min")
library(ggplot2)
ggplot(bp.usv.data, aes(x = categories.allowed, y = m.count, fill = group)) +
geom_bar(stat="identity", position=position_dodge(.9), colour="black",
width=.7) +
geom_errorbar(aes(ymin = m.count-sem, ymax=m.count+sem),
position = position_dodge(.9), size=.5, width=.5) +
scale_fill_grey(labels=c("SD VEH","SD MSX-3","WKY VEH","WKY MSX-3")) +
theme_classic() +
theme(legend.justification = c(0,0), legend.position = c(.6,.6),
axis.text.x = element_text(size=14), legend.title=element_blank())+
xlab("USV Category")+
ylab("# USVs / 30min")
ggplot(bp.usv.data, aes(x = categories.allowed, y = m.count, fill = group)) +
geom_bar(stat="identity", position=position_dodge(.9), colour="black",
width=.7) +
geom_errorbar(aes(ymin = m.count-sem, ymax=m.count+sem),
position = position_dodge(.9), size=.5, width=.5) +
scale_fill_grey(labels=c("SD VEH","SD MSX-3","WKY VEH","WKY MSX-3")) +
theme_classic() +
theme(legend.justification = c(0,0), legend.position = c(.6,.6),
axis.text = element_text(size=20), legend.title=element_blank(),
axis.title=element_text(size=15),
legend.text=element_text(size=20))+
xlab("USV Category")+
ylab("# USVs / 30min")
#now time for behavior
msx3_beh_in <- read.csv("data/Exp2_MB_Scores_mariana.csv",stringsAsFactors = F)
View(msx3_beh_in)
